name: Check Dependencies

on:
  #schedule:
  #  - cron: '45 * * * *'
  workflow_dispatch:

jobs:
  get-config:
    name: Get Config
    runs-on: ubuntu-latest
    outputs:
      debian_versions: ${{ steps.config.outputs.debian_versions }}
      archs: ${{ steps.config.outputs.archs }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run YAML to Github Output Action
        id: config
        uses: christian-ci/action-yaml-github-output@v2
        with:
          file_path: config.yaml

  get-deps:
    name: Get Dependencies
    runs-on: ubuntu-latest
    needs: get-config
    strategy:
      matrix:
        debian_version: ${{fromJson(needs.get-config.outputs.debian_versions)}}
        arch: ${{fromJson(needs.get-config.outputs.archs)}}
    steps:
      - name: Lookup libcamera0 version
        id: apt_parser
        if: matrix.debian_version == 'bullseye'
        uses: OctoPrint/actions/latest-apt-version@main
        with:
          package: libcamera0
          url: http://archive.raspberrypi.org/debian/dists/bullseye/main/binary-${{ matrix.arch }}/Packages

      - name: Lookup libcamera0.0.3 version
        id: apt_search
        if: matrix.debian_version != 'bullseye'
        uses: dangmai/get-apt-package-version@v1.2.0
        with:
          package: libcamera0.0.3
          baseImage: debian:${{ matrix.debian_version }}

      - name: Save libcamera version
        id: save_version
        run: |
          version=""
          if [ '${{ matrix.debian_version }}' == 'bullseye' ]; then
          version="${{ steps.apt_parser.outputs.version }}"
          else
          version="${{ steps.apt_search.outputs.version }}"
          fi
          echo "${{ matrix.debian_version }}_${{ matrix.arch }}=$version" >> versions_${{ matrix.debian_version }}_${{ matrix.arch }}.txt

      - name: Upload versions file
        uses: actions/upload-artifact@v4
        with:
          name: versions_${{ matrix.debian_version }}_${{ matrix.arch }}.txt
          path: .

  output:
    runs-on: ubuntu-latest
    needs: get-deps
    steps:
      - name: Cache last result
        uses: actions/cache@v4
        with:
          path: last.txt
          key: ${{ runner.os }}-check-deps

      - name: Download versions file
        uses: actions/download-artifact@v4
        with:
          pattern: versions_*
          path: .

      - name: Combine versions files
        run: |
          cat versions_*.txt/versions_*.txt > combined_versions.txt

      - name: Output libcamera0 versions
        run: |
          cat combined_versions.txt

      - name: Compare with last result
        id: new_result
        run: |
          touch last.txt
          same=$(diff last.txt combined_versions.txt > /dev/null && echo "same" || echo "different")
          echo "same=$same" >> "$GITHUB_OUTPUT"
          
          cp combined_versions.txt last.txt

      - name: "Trigger build if there is a new version"
        if: ${{ steps.new_result.outputs.same == 'different' }}
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: build_release.yaml