name: Check Dependencies

on:
  #schedule:
  #  - cron: '45 * * * *'
  workflow_dispatch:

jobs:
  get-config:
    name: Get Config
    runs-on: ubuntu-latest
    outputs:
      debian_versions: ${{ steps.config.outputs.debian_versions }}
      archs: ${{ steps.config.outputs.archs }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run YAML to Github Output Action
        id: config
        uses: christian-ci/action-yaml-github-output@v2
        with:
          file_path: config.yaml

  get-deps:
    name: Get Dependencies
    runs-on: ubuntu-latest
    needs: get-config
    strategy:
      matrix:
        debian_version: ${{fromJson(needs.get-config.outputs.debian_versions)}}
        arch: ${{fromJson(needs.get-config.outputs.archs)}}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set DOCKER_ARCH
        id: set_docker_arch
        run: |
          if [ "${{ matrix.arch }}" == "armhf" ]; then
            echo "arch=arm32v7" >> $GITHUB_OUTPUT
          elif [ "${{ matrix.arch }}" == "arm64" ]; then
            echo "arch=arm64v8" >> $GITHUB_OUTPUT
          else
            echo "arch=${{ matrix.arch }}" >> $GITHUB_OUTPUT
          fi

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Build Dockerfile
        run: |
          docker build \
          --tag get_apt_version \
          --target build \
          --file .github/Dockerfile_simple \
          --build-arg DOCKER_ARCH \
          --build-arg DEBIAN_VERSION \
          .
        env:
          DEBIAN_VERSION: ${{ matrix.debian_version }}
          DOCKER_ARCH: ${{ steps.set_docker_arch.outputs.arch }}/

      - name: Run Docker
        id: docker
        run: |
          docker run --rm get_apt_version sh -c "echo \"version=\$(apt policy libcamera-tools | sed -n 's/\\s*Candidate: //p')\"" >> $GITHUB_OUTPUT

      - name: Save libcamera version
        id: save_version
        run: |
          version="${{ steps.docker.outputs.version }}"
          echo "${{ matrix.debian_version }}_${{ matrix.arch }}=$version" >> versions_${{ matrix.debian_version }}_${{ matrix.arch }}.txt

      - name: Upload versions file
        uses: actions/upload-artifact@v4
        with:
          name: versions_${{ matrix.debian_version }}_${{ matrix.arch }}.txt
          path: .

  compare-deps:
    runs-on: ubuntu-latest
    needs: get-deps
    steps:
      - name: Cache last result
        uses: actions/cache@v4
        with:
          path: last.txt
          key: ${{ runner.os }}-check-deps

      - name: Download versions file
        uses: actions/download-artifact@v4
        with:
          pattern: versions_*
          path: .

      - name: Combine versions files
        run: |
          cat versions_*.txt/versions_*.txt > combined_versions.txt

      - name: Output libcamera0 versions
        run: |
          cat combined_versions.txt

      - name: Output last libcamera0 versions
        run: |
          cat last.txt

      - name: Compare with last result
        id: new_result
        run: |
          touch last.txt
          same=$(diff last.txt combined_versions.txt > /dev/null && echo "same" || echo "different")
          echo "same=$same" >> $GITHUB_OUTPUT
          
          rm -R versions_*.txt
          mv combined_versions.txt last.txt

      - name: Trigger build if there is a new version
        if: ${{ steps.new_result.outputs.same == 'different' }}
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: build_release.yaml
          token: ${{ secrets.PAT_TOKEN }}