name: Check Dependencies

on:
  #schedule:
  #  - cron: '45 * * * *'
  workflow_dispatch:

jobs:
  get-config:
    runs-on: ubuntu-latest
    outputs:
      debian_version: ${{ steps.config.outputs.debian_version }}
      libcamera0_bullseye_armhf: ${{ steps.config.outputs.libcamera0_bullseye_armhf }}
      libcamera0_bullseye_arm64: ${{ steps.config.outputs.libcamera0_bullseye_arm64 }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run YAML to Github Output Action
        id: config
        uses: christian-ci/action-yaml-github-output@v2
        with:
          file_path: config.yaml

  get-deps:
    runs-on: ubuntu-latest
    needs: get-config
    strategy:
      matrix:
        debian_version: ${{fromJson(needs.get-config.outputs.debian_version)}}
        arch: [armhf, arm64]
    outputs:
      libcamera0_version: ${{ steps.libcamera0_version.outputs.version }}
    steps:
      - name: Get version
        id: libcamera0_version
        uses: dangmai/get-apt-package-version@v1.2.0
        with:
          package: libcamera0
          baseImage: dtcooper/raspberrypi-os:${{ matrix.debian_version }}

#      - name: Get base URL
#        id: base_url
#        run: |
#          if [ "${{ matrix.debian_version }}" == "bullseye" ]; then
#            echo "base_url=http://archive.raspberrypi.org/debian" >> $GITHUB_OUTPUT
#            echo "file=Packages" >> $GITHUB_OUTPUT
#          else
#            echo "base_url=http://deb.debian.org/debian" >> $GITHUB_OUTPUT
#            echo "file=Packages.gz" >> $GITHUB_OUTPUT
#          fi
#
#      - name: Lookup libcamera0 version
#        id: libcamera0_version
#        uses: OctoPrint/actions/latest-apt-version@main
#        with:
#          package: libcamera0
#          url: ${{ steps.base_url.outputs.base_url }}/dists/${{ matrix.debian_version }}/main/binary-${{ matrix.arch }}/${{ steps.base_url.outputs.file }}

  check-libcamera-bullseye32:
    runs-on: ubuntu-latest
    needs: get-deps
    steps:
      - name: Output libcamera0 version
        run: |
          echo libcamera0_version: ${{ needs.get-deps.outputs.libcamera0_version }}