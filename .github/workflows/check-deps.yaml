name: Check Dependencies

on:
  #schedule:
  #  - cron: '45 * * * *'
  workflow_dispatch:

jobs:
  get-config:
    name: Get Config
    runs-on: ubuntu-latest
    outputs:
      debian_version: ${{ steps.config.outputs.debian_version }}
      libcamera0_bullseye_armhf: ${{ steps.config.outputs.libcamera0_bullseye_armhf }}
      libcamera0_bullseye_arm64: ${{ steps.config.outputs.libcamera0_bullseye_arm64 }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run YAML to Github Output Action
        id: config
        uses: christian-ci/action-yaml-github-output@v2
        with:
          file_path: config.yaml

  get-deps:
    name: Get Dependencies
    runs-on: ubuntu-latest
    needs: get-config
    strategy:
      matrix:
        debian_version: ${{fromJson(needs.get-config.outputs.debian_version)}}
        arch: [armhf, arm64]
    outputs:
      libcamera0_version: ${{ steps.libcamera0_version.outputs.version }}
    steps:
      - name: Lookup libcamera0 version
        id: apt_parser
        if: matrix.debian_version == 'bullseye'
        uses: OctoPrint/actions/latest-apt-version@main
        with:
          package: libcamera0
          url: http://archive.raspberrypi.org/debian/dists/bullseye/main/binary-${{ matrix.arch }}/Packages

      - name: Lookup libcamera0.0.3 version
        id: apt_search
        if: matrix.debian_version != 'bullseye'
        uses: dangmai/get-apt-package-version@v1.2.0
        with:
          package: libcamera0.0.3
          baseImage: debian:${{ matrix.debian_version }}

      - name: Output libcamera version
        id: libcamera0_version
        run: |
          if [ '${{ matrix.debian_version }}' == 'bullseye' ]; then
            echo "version=${{ steps.apt_parser.outputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "version=${{ steps.apt_search.outputs.version }}" >> $GITHUB_OUTPUT
          fi

  check-libcamera-bullseye32:
    runs-on: ubuntu-latest
    needs: get-deps
    steps:
      - name: Output libcamera0 version
        run: |
          echo libcamera0_version: ${{ needs.get-deps.outputs }}